#!/bin/sh

# Setup colors if supported
if tput setaf 1 >/dev/null 2>&1; then
  C_INFO="$(tput setaf 4)"
  C_WARN="$(tput setaf 3)"
  C_OK="$(tput setaf 2)"
  C_ERR="$(tput setaf 1)"
  C_RST="$(tput sgr0)"
fi

# Color print functions
info() { printf "%s%s%s\n" "$C_INFO" "$1" "$C_RST" >&2; }
warn() { printf "%s%s%s\n" "$C_WARN" "$1" "$C_RST" >&2; }
ok() { printf "%s%s%s\n" "$C_OK" "$1" "$C_RST" >&2; }
err() { printf "%s%s%s\n" "$C_ERR" "$1" "$C_RST" >&2; }

# Help
[ "$1" = "-h" ] || [ "$1" = "--help" ] && {
  printf "Usage: %s [OPTION]\nCopy input text to clipboard.\n\n" "$0"
  printf "Options:\n  -h, --help    Show help\n\n"
  printf "Examples:\n  echo 'Hello' | %s\n  %s  # interactive mode\n" "$0" "$0"
  exit 0
}

# Read input
if [ -t 0 ]; then
  info "📋 Enter text (Ctrl+D to finish):"
fi

input=$(cat)

[ -z "$input" ] && warn "⚠️  Empty input!"

# Copy to clipboard
if command -v fish_clipboard_copy >/dev/null 2>&1; then
  printf "%s" "$input" | fish_clipboard_copy
elif command -v pbcopy >/dev/null 2>&1; then
  printf "%s" "$input" | pbcopy
else
  # OSC52 fallback
  if ! command -v base64 >/dev/null 2>&1; then
    err "❌ base64 not found"
    exit 1
  fi

  # Detect base64 flags
  if echo test | base64 -w0 >/dev/null 2>&1; then
    b64_flag="-w0"
  elif echo test | base64 -b0 >/dev/null 2>&1; then
    b64_flag="-b0"
  else
    err "❌ Unsupported base64"
    exit 1
  fi

  content_b64=$(printf "%s" "$input" | base64 $b64_flag | tr -d '\n')
  printf "\033]52;c;%s\a" "$content_b64"
fi

# Status message
if [ -z "$input" ]; then
  warn "🧹 Cleaned clipboard!"
else
  ok "✅ Copied to clipboard!"
fi
